apiVersion: batch/v1
kind: Job
metadata:
  name: setup
  labels: 
    name: deploy-task
spec:
  backoffLimit: 3
  parallelism: 1
  completions: 1
  template:
    metadata:
      name: setup
      labels: 
        name: deploy-task
    spec:
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
        - name: ssl-certs
          hostPath:
            path: /etc/ssl/certs
        - name: cloudsql
          emptyDir: {}
        - name: tmp-pod
          emptyDir: {}

      restartPolicy: Never

      containers:
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.11
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "start connect cloud proxy"
              /cloud_sql_proxy -instances=$(SQL_INSTANCE_NAME)=tcp:3306 -credential_file=/secrets/cloudsql/credentials.json &
              while true; do
                if [[ -f "/tmp/pod/terminated" ]]; then kill $!; echo "Killed $! because the main container terminated. And Job completed. Exiting..."; exit 0; fi;
                sleep 1;
              done
          securityContext:
            runAsUser: 2  # non-root user
            allowPrivilegeEscalation: false
          resources:
            requests:
              cpu: 5m
          env:
            - name: SQL_INSTANCE_NAME
              value: ${SQL_INSTANCE_NAME} 
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
            - name: ssl-certs
              mountPath: /etc/ssl/certs
            - name: cloudsql
              mountPath: /cloudsql
            - name: tmp-pod
              mountPath: /tmp/pod  
              readOnly: true

        - name: setup
          image: asia.gcr.io/${PROJECT_NAME}/${CLOUD_REGISTRY_NAME}/app:$CIRCLE_SHA1
          imagePullPolicy: Always
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "start migration"
              sleep 2s
              trap "touch /tmp/pod/terminated && echo 'terminated file was created' && ls /tmp/pod" EXIT
              bundle exec rails db:create && bundle exec rails db:migrate
              echo "finished migration"
          resources:
            requests:
              cpu: 5m
          env:
            - name: DB_HOST
              value: 127.0.0.1
            - name: RAILS_ENV
              value: production
            - name: RAILS_MASTER_KEY
              valueFrom:
                secretKeyRef:
                  name: secret
                  key: rails_master_key
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: secret
                  key: username
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secret
                  key: password
          volumeMounts:
            - mountPath: /tmp/pod
              name: tmp-pod

