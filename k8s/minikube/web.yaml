apiVersion: v1
kind: Service
metadata:
  name: webserver-service

spec:
  type: NodePort
  selector:
    app: rails
    server: web
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080
      nodePort: 30000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  labels:
    app: rails

spec:
  replicas: 2
  revisionHistoryLimit: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0
  selector:
    matchLabels:
      server: web


  template:
    metadata:
      labels:
        app: rails
        server: web
    spec:
      terminationGracePeriodSeconds: 30
      volumes:
        - name: sockets
          emptyDir: {}
        - name: public
          emptyDir: {}

      containers:
        - name: nginx
          image: asia.gcr.io/testing-190408-237002/rails_puma_gke_sample/web:http
          imagePullPolicy: Never
          resources:
            requests:
              cpu: 5m
              memory: 40Mi
            limits:
              cpu: 100m
              memory: 128Mi
          ports:
            - name: target
              containerPort: 8080
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 25; nginx -s quit"]
          volumeMounts:
            - mountPath: /webapp/tmp/sockets
              name: sockets
            - mountPath: /webapp/public
              name: public


        - name: rails
          image: asia.gcr.io/testing-190408-237002/rails_puma_gke_sample/app:v0.1
          imagePullPolicy: Never
          resources:
            requests:
              cpu: 5m
              memory: 40Mi
            limits:
              cpu: 100m
              memory: 216Mi
          env:
            - name: TZ
              value: Asia/Tokyo
          envFrom:
            - configMapRef:
                name: config
          command:
            - /bin/bash
          args:
            - -c
            - cp -rf /webapp/tmp/public/* /webapp/public && rm -rf /webapp/tmp/public && bundle exec puma -C config/puma.rb
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 25; kill -QUIT `(cat tmp/pids/puma.pid)`"]
          volumeMounts:
            - mountPath: /webapp/tmp/sockets
              name: sockets
            - mountPath: /webapp/public
              name: public