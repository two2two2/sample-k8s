apiVersion: v1
kind: Service
metadata:
  name: sample-service-blue

spec:
  type: NodePort
  selector:
    app: nginx
    version: blue
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-nginx-blue
  labels:
    app: nginx
    version: blue

spec:
  replicas: 4
  revisionHistoryLimit: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  selector:
    matchLabels:
      app: nginx
      version: blue

  template:
    metadata:
      labels:
        app: nginx
        version: blue
    spec:
      terminationGracePeriodSeconds: 30

      initContainers:
        - image: alpine:3.9
          name: sleep
          command: ["sleep", "3"]
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 1m
              memory: 5Mi
      containers:
        - name: nginx
          image: nginx:1.15.8
          imagePullPolicy: Never
          resources:
            requests:
              cpu: 5m
          ports:
            - name: target
              containerPort: 80
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "echo 'Blue' > /usr/share/nginx/html/index.html"]
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 1; nginx -s quit"]
